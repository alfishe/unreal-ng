cmake_minimum_required(VERSION 3.12)
project(automation_lua LANGUAGES CXX)

# Specify the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Set paths
get_filename_component(ROOT_DIR ../../../ ABSOLUTE BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set (SOURCE_DIR src)
set (DATA_PATH ${ROOT_DIR}/data)

# Include CMake helper functions file
include(${ROOT_DIR}/cmake/func.cmake)

# Set options for Lua compilation
option(LUA_BUILD_AS_CXX ON)
option(LUA_ENABLE_SHARED OFF)
option(LUA_ENABLE_TESTING OFF)
add_subdirectory(3rdparty/lua lua)

# SOL2 C++ to Lua interaction wrapper
add_subdirectory(3rdparty/sol2)

# Set option for LuaCPP wrapper library
option(LUACPP_BUILD_TESTS "build tests" OFF)
option(LUACPP_INSTALL "install headers and libs" OFF)
set(LUA_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/lua/lua-5.4.6/include)
set(LUA_LIBRARIES '')
message(STATUS "LUA_INCLUDE_DIR: ${LUA_INCLUDE_DIR}")
add_subdirectory(3rdparty/luacpp/Source luacpp)

# All C++ sources in /src and sub-folders will be compiled
file (GLOB_RECURSE CPP_FILES ${SOURCE_DIR}/*.cpp)
EXCLUDE_FILES_FROM_DIR_IN_LIST("${CPP_FILES}" "/build/" FALSE OUTVAR CPP_FILES)         # Exclude /build folder
EXCLUDE_FILES_FROM_DIR_IN_LIST("${CPP_FILES}" "/CMakeFiles/" FALSE OUTVAR CPP_FILES)    # Exclude /CMakeFile autogenerated files
set(SOURCES ${CPP_FILES} src/automation-main.cpp src/emulator/emulator.h)
message("SOURCES:${SOURCES}")

if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    # Add unrealng::core library (only if it's top level CMake file. Otherwise unrealng::core will be built and linked from top level project)
    add_subdirectory(${ROOT_DIR}/core/src core)
    set (LINK_LIBRARIES ${LINK_LIBRARIES} unrealng::core)

    # Put binary and configuration files to /bin subfolder
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

    add_executable(${PROJECT_NAME} ${SOURCES})

    target_link_libraries(${PROJECT_NAME}
        lua_static
        luacpp_static
        unrealng::core
    )

    # Copy default config file to binary folder after successful compilation
    SET (CONFIG_FILE ${DATA_PATH}/configs/pentagon512k/unreal.ini)
    message("CONFIG_FILE: ${CONFIG_FILE}")
    message("Binary: ${CMAKE_BINARY_DIR}/${PROJECT_NAME}")
    add_custom_command(
            TARGET ${PROJECT_NAME} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E
            copy ${CONFIG_FILE} "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/unreal.ini"
    )

    # Copy all ROM files to /rom sub-folder
    add_custom_command(
            TARGET ${PROJECT_NAME} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E
            copy_directory ${DATA_PATH}/rom ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/rom
    )

    # Copy all test ROM files to /rom sub-folder
    add_custom_command(
            TARGET ${PROJECT_NAME} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E
            copy_directory ${DATA_PATH}/testrom ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/rom
    )
else()
    # Produce static library;  Create unrealng::automation_lua alias for the target
    add_library(${PROJECT_NAME} STATIC ${SOURCES})
    add_library(unrealng::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

    target_link_libraries(${PROJECT_NAME}
        lua_static
        luacpp_static
    )
endif()


# Add include folders for compiler recognition
target_include_directories(${PROJECT_NAME} PRIVATE
    $<TARGET_PROPERTY:luacpp_static,INCLUDE_DIRECTORIES>
    3rdparty/lua/lua-5.4.6/include
    3rdparty/sol2/include
    3rdparty/luacpp/Source
    ${ROOT_DIR}/core/src
)


# <Diagnostics>
get_target_property(APP_SOURCES ${PROJECT_NAME} SOURCES)
get_target_property(APP_INCLUDES ${PROJECT_NAME} INCLUDE_DIRECTORIES)

message(STATUS "<${PROJECT_NAME} diagnostics>")
message(STATUS "  PROJECT_NAME:             ${PROJECT_NAME}")
message(STATUS "  SOURCE_DIR:               ${SOURCE_DIR}")

message(STATUS "  APP_SOURCES:              ${APP_SOURCES}")
message(STATUS "  APP_INCLUDES:             ${APP_INCLUDES}")

message(STATUS "  DATA_PATH:                ${DATA_PATH}")

message(STATUS "</${PROJECT_NAME} diagnostics>")
# </Diagnostics>
